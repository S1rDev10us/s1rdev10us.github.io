---
import { getCollection } from "astro:content";
import Overlay from "../layouts/Overlay.astro";
import type { Render } from "astro:content";
import Icon from "../components/Icon";
const tools = await getCollection("tools");
const toolBodies = await (async () => {
	let toolBodies: Awaited<Render[".md"]>[] = [];
	for (const tool of tools) {
		toolBodies.push(await tool.render());
	}
	return toolBodies;
})();
---

<Overlay title="Tools I Use">
	<h1>The tools that I use</h1>
	<div
		class="d-flex gap-2 mb-5 flex-wrap align-items-center justify-content-center"
	>
		{
			tools.map((v, i) => (
				<>
					<div
						class="card"
						style="width: 18rem;"
					>
						<img
							src={v.data.thumbnail}
							style="max-width: calc(100% - 1rem); max-height: 7rem;"
							class="card-img-top mx-2 mt-2 "
						/>
						<hr />
						<div class="card-body pt-0">
							{() => {
								const toolBody = toolBodies[i];
								if (!toolBody) return undefined;
								return ((Content) => <Content />)(toolBody.Content);
							}}
						</div>
						{v.data.externalLinks || v.data.externalLink ? (
							<div class="card-footer">
								<div class="d-flex justify-content-center align-items-center">
									{(v.data.externalLink
										? [...(v.data.externalLinks ?? []), v.data.externalLink]
										: v.data.externalLinks
									)?.map((v2) =>
										v2 ? (
											<a
												href={v2.url}
												title={v2.title}
												target="_blank"
												rel="noopener noreferrer"
												class="btn btn-primary btn-sm"
											>
												{v2.title}&nbsp;
												<Icon
													iconName="box-arrow-up-right"
													style={{ fontSize: ".625em" }}
												/>
											</a>
										) : undefined
									)}
								</div>
							</div>
						) : undefined}
					</div>
				</>
			))
		}
	</div>
</Overlay>
