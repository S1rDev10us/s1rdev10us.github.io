---
import type { CollectionEntry } from "astro:content";
import Overlay from "./Overlay.astro";
import { formatDate } from "../scripts/lib";

export interface Props<TCollection extends "creations" | "posts"> {
	collection: TCollection;
	post: CollectionEntry<TCollection>;
}
const { collection, post } = Astro.props;

const title = post.data.title;
const { Content, remarkPluginFrontmatter: frontmatter } = await post.render();

if (!title) throw Error(`Post "${post.id}" does not have a title defined`);

const { minutesRead: readtime } = frontmatter;

const releaseDate = new Date(frontmatter.released ?? frontmatter.pubDate);

if (isNaN(releaseDate.getTime()))
	throw Error(`Post "${post.id}" does not have a valid date`);

const extraInfo: string[] = [];
switch (collection) {
	case "creations":
		extraInfo.push(
			`developed ${formatDate(new Date(frontmatter.developedStart))} to ${frontmatter.developedEnd ? formatDate(new Date(frontmatter.developedEnd)) : "now"}`,
		);
		break;
}

const info = [
	`Released on ${formatDate(releaseDate)}`,
	`${readtime.words} words`,
	`${readtime.text} time`,
	...extraInfo,
];
---

<Overlay
	title={title}
	isArticle
>
	<div class="text-start">
		<h1>{title}</h1>
		<i>
			{info.join(", ")}
		</i>
		<br />
		<br />
		<Content />
	</div>
</Overlay>
