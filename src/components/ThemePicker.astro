---
import { Theme } from "../scripts/themes";
import { themes } from "../scripts/data";
import Icon from "./Icon";

function hideThemes(theme: Theme) {
	return `window.hideThemes('${theme}');`;
}
---

<div
	class="dropstart btn-group"
	style="padding: var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-y);"
>
	<style>
		.theme-toggler-inactive {
			display: none;
		}
	</style>
	<button
		class="btn-sm btn btn-secondary dropdown-toggle remove-after remove-before"
		type="button"
		title="Theme Picker"
		data-bs-toggle="dropdown"
		aria-expanded="false"
	>
		<!-- Dropdown button -->
		{
			themes.map((v) => (
				<div
					class:list={[`theme-toggler-${v.id}`, "theme-toggler"]}
					style={`display: ${v.id == Theme.AUTO ? "inherit" : "none"};`}
				>
					<Icon iconName={v.icon} />
				</div>
			))
		}
	</button>
	<ul class="dropdown-menu">
		{
			themes.map((v) => (
				<>
					<li>
						<button
							class:list={[
								"dropdown-item",
								"theme-toggler-choice",
								`theme-toggler-choice-${v.id}`,
							]}
							type="button"
							onclick={hideThemes(v.id)}
						>
							<Icon iconName={v.icon} />
							&nbsp;{v.desc}
						</button>
					</li>
				</>
			))
		}
	</ul>

	<script is:inline>
		const Theme = {
			LIGHT: "light",
			DARK: "dark",
			AUTO: "auto",
		};
		const darkMatchMedia = window.matchMedia("(prefers-color-scheme: dark)");
		const lightMatchMedia = window.matchMedia("(prefers-color-scheme: light)");
		var currentTheme = localStorage.getItem("theme") ?? Theme.AUTO;

		darkMatchMedia.onchange = () => setTheme();
		lightMatchMedia.onchange = () => setTheme();

		document.addEventListener("astro:page-load", () => setTheme());
		document.addEventListener("astro:after-swap", () => setTheme());

		setTheme();
		function resolveTheme(theme) {
			if (!theme) return resolveTheme(currentTheme);
			return theme == Theme.AUTO
				? darkMatchMedia.matches
					? Theme.DARK
					: Theme.LIGHT
				: theme;
		}
		function setTheme(theme) {
			if (!theme) return setTheme(currentTheme);
			currentTheme = theme;
			localStorage.setItem("theme", theme);
			document.documentElement.setAttribute("data-bs-theme", resolveTheme());

			document.querySelectorAll(".theme-toggler").forEach((e) => {
				e.style.display = e.classList.contains(`theme-toggler-${theme}`)
					? "inherit"
					: "none";
			});
			document.querySelectorAll(".theme-toggler-choice").forEach((e) => {
				e.classList.toggle(
					"active",
					e.classList.contains(`theme-toggler-choice-${theme}`),
				);
			});
		}
		window.hideThemes = setTheme;
	</script>
</div>
